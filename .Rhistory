scdata$New_celltype<-as.character(scdata$New_celltype)
for (i in 1:6){
cell_names[i]->cell_name
scdata$New_celltype[scdata$New_celltype==i-1]<-cell_name
}
scdata$New_celltype<-factor(scdata$New_celltype,levels = cell_names)
unique(scdata$seurat_clusters)
scdata$New_celltype2 <- paste(scdata$New_celltype,scdata$seurat_clusters,sep="_")
unique(scdata$New_celltype2
)
scdata$New_celltype
scdata<-readRDS("D:\\OneDrive\\类器官空间\\DEanalysis\\H9_D60_2_stdata.rds")
scdata<-subset(scdata,subset = seurat_clusters!=6 & seurat_clusters!=7)
read.delim("D:\\OneDrive\\类器官空间\\H9_D60_decon_mtrx.txt",header = T,sep="\t")->decon_mtrx
meta.data<-scdata@meta.data
cell_id<-intersect(rownames(meta.data),rownames(decon_mtrx))
decon_mtrx[cell_id,"cluster"]<-meta.data[cell_id,"seurat_clusters"]
na.omit(decon_mtrx)->decon_mtrx
#计算每个cluster,每一列细胞类型的平均比例
mean_list<-list()
for (i in 1:6){
cluster<-i-1
decon_mtrx[decon_mtrx$cluster==cluster,1:(ncol(decon_mtrx)-1)]->sub_decon_mtrx
colMeans(sub_decon_mtrx)->sub_decon_mtrx_mean
mean_list[[i]]<-sub_decon_mtrx_mean
}
as.data.frame(do.call(rbind,mean_list))->mean_df
rownames(mean_df)<-paste0("cluster",0:5)
read.delim("D:\\OneDrive\\类器官空间\\H9_D60_decon_mtrx.txt",header = T,sep="\t")->decon_mtrx
meta.data<-scdata@meta.data
cell_id<-intersect(rownames(meta.data),rownames(decon_mtrx))
decon_mtrx[cell_id,"cluster"]<-meta.data[cell_id,"seurat_clusters"]
na.omit(decon_mtrx)->decon_mtrx
#计算每个cluster,每一列细胞类型的平均比例
mean_list<-list()
for (i in 1:6){
cluster<-i-1
decon_mtrx[decon_mtrx$cluster==cluster,1:(ncol(decon_mtrx)-1)]->sub_decon_mtrx
colMeans(sub_decon_mtrx)->sub_decon_mtrx_mean
mean_list[[i]]<-sub_decon_mtrx_mean
}
as.data.frame(do.call(rbind,mean_list))->mean_df
rownames(mean_df)<-paste0("cluster",0:5)
top2_celltype<-list()
for (i in 1:6){
mean_list[[i]]->sub_mean
names(sort(sub_mean,decreasing = T)[1:3])->a
paste(a,collapse = "_")->top2_celltype[[i]]
}
cell_names<-unlist(top2_celltype)
scdata$New_celltype<-scdata$seurat_clusters
scdata$New_celltype<-as.character(scdata$New_celltype)
for (i in 1:6){
cell_names[i]->cell_name
scdata$New_celltype[scdata$New_celltype==i-1]<-cell_name
}
#level
scdata$New_celltype<-factor(scdata$New_celltype,levels = cell_names)
unique(scdata$New_celltype)
scdata$New_celltype
read.csv("D:\\OneDrive\\类器官空间\\DEanalysis\\chenming_check_8.4.csv",header = T)->chenming_check
#将scdata$seurat_clusters中的0改为6
scdata$seurat_clusters<-as.numeric(scdata$seurat_clusters)
scdata$seurat_clusters[scdata$seurat_clusters==0]<-6
scdata$seurat_clusters
cell_names
scdata$New_celltype2 <- paste(scdata$New_celltype,scdata$seurat_clusters,sep="_")
unique(scdata$New_celltype2)
scdata$New_celltype2<-factor(scdata$New_celltype2,levels = cell_names)
DotPlot(scdata,features=unique(GENES),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 35, hjust = 1))+theme(legend.position = "top")
scdata$New_celltype2
cell_names
cell_names
cell_names<-paste(cell_names,1:6,sep="_")
scdata$New_celltype2 <- paste(scdata$New_celltype,scdata$seurat_clusters,sep="_")
cell_names
unique(scdata$New_celltype2)
scdata$New_celltype2<-factor(scdata$New_celltype2,levels = cell_names)
scdata$New_celltype2
DotPlot(scdata,features=unique(GENES),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 35, hjust = 1))+theme(legend.position = "top")
scdata<-readRDS("D:\\OneDrive\\类器官空间\\DEanalysis\\H9_D60_2_stdata.rds")
scdata<-subset(scdata,subset = seurat_clusters!=6 & seurat_clusters!=7)
read.delim("D:\\OneDrive\\类器官空间\\H9_D60_decon_mtrx.txt",header = T,sep="\t")->decon_mtrx
meta.data<-scdata@meta.data
cell_id<-intersect(rownames(meta.data),rownames(decon_mtrx))
decon_mtrx[cell_id,"cluster"]<-meta.data[cell_id,"seurat_clusters"]
na.omit(decon_mtrx)->decon_mtrx
#计算每个cluster,每一列细胞类型的平均比例
mean_list<-list()
for (i in 1:6){
cluster<-i-1
decon_mtrx[decon_mtrx$cluster==cluster,1:(ncol(decon_mtrx)-1)]->sub_decon_mtrx
colMeans(sub_decon_mtrx)->sub_decon_mtrx_mean
mean_list[[i]]<-sub_decon_mtrx_mean
}
as.data.frame(do.call(rbind,mean_list))->mean_df
rownames(mean_df)<-paste0("cluster",0:5)
mean_df
top2_celltype<-list()
for (i in 1:6){
mean_list[[i]]->sub_mean
names(sort(sub_mean,decreasing = T)[1:3])->a
paste(a,collapse = "_")->top2_celltype[[i]]
}
top2_celltype
cell_names<-unlist(top2_celltype)
cell_names
scdata$New_celltype<-scdata$seurat_clusters
scdata$New_celltype<-as.numeric(scdata$seurat_clusters)
scdata$New_celltype
scdata<-readRDS("D:\\OneDrive\\类器官空间\\DEanalysis\\H9_D60_2_stdata.rds")
table(scdata$seurat_clusters)
scdata<-subset(scdata,subset = seurat_clusters!=6 & seurat_clusters!=7)
table(scdata$seurat_clusters)
scdata$New_celltype<-as.numeric(scdata$seurat_clusters)
table(scdata$New_celltype)
scdata$New_celltype<-as.character(scdata$seurat_clusters)
table(scdata$New_celltype)
cell_names
for (i in 1:6){
scdata$New_celltype[scdata$New_celltype==as.character(i-1)]<-top2_celltype[[i]]}
table(scdata$New_celltype)
scdata$seurat_clusters<-as.character(scdata$seurat_clusters)
scdata$seurat_clusters==0
table(scdata$seurat_clusters)
scdata$seurat_clusters[scdata$seurat_clusters==0]<-6
table(scdata$seurat_clusters)
scdata$New_celltype2 <- paste(scdata$New_celltype,scdata$seurat_clusters,sep="_")
cell_names<-paste(cell_names,c(6,1:5),sep="_")
cell_names
table(scdata$New_celltype2)
scdata$New_celltype2<-factor(scdata$New_celltype2,levels = cell_names)
scdata$New_celltype2
DotPlot(scdata,features=unique(GENES),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 35, hjust = 1))+theme(legend.position = "top")
scdata$New_celltype2<-factor(scdata$New_celltype2,levels = cell_names[2:6,1])
cell_names
scdata$New_celltype2<-factor(scdata$New_celltype2,levels = cell_names[c(2:6,1)])
DotPlot(scdata,features=unique(GENES),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 35, hjust = 1))+theme(legend.position = "top")
scdata$New_celltype2<-factor(scdata$New_celltype2,levels = rev(cell_names[c(2:6,1)]))
DotPlot(scdata,features=rev(unique(GENES)),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 35, hjust = 1))+theme(legend.position = "top")
DotPlot(scdata,features=unique(GENES),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 35, hjust = 1))+theme(legend.position = "top")
scdata$seurat_clusters<-as.character(scdata$seurat_clusters)
table(scdata$seurat_clusters)
scdata$New_celltype<-scdata$seurat_clusters
scdata$New_celltype[scdata$New_celltype=="6"]<-"RPC_PCs"
scdata$New_celltype[scdata$New_celltype=="1"]<-"RGC"
scdata$New_celltype[scdata$New_celltype=="2"]<-"RPC_PC_precursors_MC"
scdata$New_celltype[scdata$New_celltype=="3"]<-"RPE_RPE_progenitors"
scdata$New_celltype[scdata$New_celltype=="4"]<-"hRSLCs"
scdata$New_celltype[scdata$New_celltype=="5"]<-"RPC_AC/HC_PC_MC"
scdata$New_celltype2 <- paste(scdata$New_celltype,scdata$seurat_clusters,sep="_")
table(scdata$New_celltype2)
cell_names<-c("RGC","RPC_PC_precursors_MC","RPE_RPE_progenitors","hRSLCs","RPC_AC/HC_PC_MC","RPC_PCs")
cell_names<-paste(cell_names,1:6,sep="_")
scdata$New_celltype2<-factor(scdata$New_celltype2,levels = rev(cell_names))
scdata$New_celltype2
GENES<-intersect(chenming_check$GENES,rownames(scdata))
DotPlot(scdata,features=unique(GENES),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 35, hjust = 1))+theme(legend.position = "top")
pdf("D:\\OneDrive\\类器官空间\\DEanalysis\\celltypemarker_chenming8.4check_dotplot.pdf",width = 13,height = 4)
DotPlot(scdata,features=unique(GENES),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 35, hjust = 1))+theme(legend.position = "top")
dev.off()
pdf("D:\\OneDrive\\类器官空间\\DEanalysis\\celltypemarker_chenming8.4check_dotplot.pdf",width = 14,height = 4)
DotPlot(scdata,features=unique(GENES),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 45, hjust = 1))+theme(legend.position = "top")
dev.off()
scdata$New_celltype<-scdata$seurat_clusters
table(scdata$New_celltype)
read.csv("D:\\OneDrive\\类器官空间\\DEanalysis\\chenming_check_8.4.csv",header = T)->chenming_check
read.csv("D:\\OneDrive\\类器官空间\\DEanalysis\\chenming_check_8.4.csv",header = T)->chenming_check
scdata$New_celltype[scdata$New_celltype=="6"]<-"RPC/PC"
scdata$New_celltype[scdata$New_celltype=="1"]<-"RGC/RPC"
scdata$New_celltype[scdata$New_celltype=="2"]<-"RPC/PC_precursors/MC"
scdata$New_celltype[scdata$New_celltype=="3"]<-"RPE/RPE_progenitors"
scdata$New_celltype[scdata$New_celltype=="4"]<-"hRSLCs"
scdata$New_celltype[scdata$New_celltype=="5"]<-"RPC/PC/AC_HC/BC/MC"
cell_names<-c("RGC/RPC","RPC/PC_precursors/MC","RPE/RPE_progenitors","hRSLCs","RPC/PC/AC_HC/BC/MC","RPC/PC")
#cell_names<-paste(cell_names,1:6,sep="_")
scdata$New_celltype<-factor(scdata$New_celltype,levels = rev(cell_names))
GENES<-intersect(chenming_check$GENES,rownames(scdata))
DotPlot(scdata,features=unique(GENES),group.by="New_celltype2",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 45, hjust = 1))+theme(legend.position = "top")
DotPlot(scdata,features=unique(GENES),group.by="New_celltype",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 45, hjust = 1))+theme(legend.position = "top")
pdf("D:\\OneDrive\\类器官空间\\DEanalysis\\celltypemarker_chenming8.4check_dotplot.pdf",width = 14,height = 4)
DotPlot(scdata,features=unique(GENES),group.by="New_celltype",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 45, hjust = 1))+theme(legend.position = "top")
dev.off()
read.csv("D:\\OneDrive\\类器官空间\\DEanalysis\\chenming_check_8.4.csv",header = T)->chenming_check
GENES<-intersect(chenming_check$GENES,rownames(scdata))
DotPlot(scdata,features=unique(GENES),group.by="New_celltype",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 45, hjust = 1))+theme(legend.position = "top")
pdf("D:\\OneDrive\\类器官空间\\DEanalysis\\celltypemarker_chenming8.4check_dotplot.pdf",width = 14,height = 4)
DotPlot(scdata,features=unique(GENES),group.by="New_celltype",assay="SCT")+
scale_colour_gradient2(low="#3A71AA",mid="white",high="#B22028",midpoint=0)+
theme_bw()+
theme (axis.text.x = element_text (angle = 45, hjust = 1))+theme(legend.position = "top")
dev.off()
library(Seurat)
library(dplyr)
library(ggplot2)
library(patchwork)
library(ggpubr)
scdata<-readRDS("D:\\OneDrive\\类器官空间\\DEanalysis\\H9_D60_2_stdata.rds")
scdata<-subset(scdata,subset = seurat_clusters!=6 & seurat_clusters!=7)
scdata$seurat_clusters<-as.character(scdata$seurat_clusters)
scdata$seurat_clusters[scdata$seurat_clusters==0]<-6
scdata$New_celltype<-scdata$seurat_clusters
table(scdata$New_celltype)
scdata$New_celltype[scdata$New_celltype=="6"]<-"RPC/PC"
scdata$New_celltype[scdata$New_celltype=="1"]<-"RGC/RPC"
scdata$New_celltype[scdata$New_celltype=="2"]<-"RPC/PC_precursors/MC"
scdata$New_celltype[scdata$New_celltype=="3"]<-"RPE/RPE_progenitors"
scdata$New_celltype[scdata$New_celltype=="4"]<-"hRSLCs"
scdata$New_celltype[scdata$New_celltype=="5"]<-"RPC/PC/AC_HC/BC/MC"
saveRDS(scdata,"D:\\OneDrive\\类器官空间\\DEanalysis\\H9_D60_2_final_stdata.rds")
read.delim("D:\\OneDrive\\类器官空间\\H9_D60_decon_mtrx.txt",header = T,sep="\t")->decon_mtrx
meta.data<-scdata@meta.data
cell_id<-intersect(rownames(meta.data),rownames(decon_mtrx))
decon_mtrx[cell_id,"cluster"]<-meta.data[cell_id,"seurat_clusters"]
na.omit(decon_mtrx)->decon_mtrx
#计算每个cluster,每一列细胞类型的平均比例
mean_list<-list()
for (i in 1:6){
cluster<-i-1
decon_mtrx[decon_mtrx$cluster==cluster,1:(ncol(decon_mtrx)-1)]->sub_decon_mtrx
colMeans(sub_decon_mtrx)->sub_decon_mtrx_mean
mean_list[[i]]<-sub_decon_mtrx_mean
}
rownames(meta.data)
read.delim("D:\\OneDrive\\类器官空间\\H9_D60_decon_mtrx.txt",header = T,sep="\t")->decon_mtrx
meta.data<-scdata@meta.data
cell_id<-intersect(rownames(meta.data),rownames(decon_mtrx))
decon_mtrx[cell_id,"cluster"]<-meta.data[cell_id,"New_celltype"]
na.omit(decon_mtrx)->decon_mtrx
head(decon_mtrx)
mean_list<-list()
for (i in unique(decon_mtrx$cluster)){
decon_mtrx[decon_mtrx$cluster==i,1:(ncol(decon_mtrx)-1)]->sub_decon_mtrx
colMeans(sub_decon_mtrx)->sub_decon_mtrx_mean
mean_list[[i]]<-sub_decon_mtrx_mean
}
mean_list
as.data.frame(do.call(rbind,mean_list))->mean_df
rownames(mean_df)<-names(mean_list)
mean_list
mean_df
write.csv(mean_df,"D:\\OneDrive\\类器官空间\\DEanalysis\\spatial_cluster_decon_mtrx_mean.csv",row.names = T)
mean_df
data <- data.frame(
category = rownames(mean_df),
proportion = mean_df$BCs
)
data$ymax <- cumsum(data$proportion)
data$ymin <- c(0, head(data$ymax, n = -1))
ggplot(data, aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = category)) +
geom_rect() +
coord_polar(theta = "y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "bottom") +
labs(title = "Circle Donut Chart")
data
mean_df
data <- data.frame(
category = colnames(mean_df),
proportion = mean_df[1,]
)
colnames(mean_df)
mean_df[1,]
data <- data.frame(
category = colnames(mean_df),
proportion = unlist(mean_df[1,])
)
data
data$ymax <- cumsum(data$proportion)
data$ymin <- c(0, head(data$ymax, n = -1))
# 绘制圆环图
ggplot(data, aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = category)) +
geom_rect() +
coord_polar(theta = "y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "bottom") +
labs(title = "Circle Donut Chart")
max_proportion <- max(data$proportion)
max_category <- data$category[data$proportion == max_proportion]
p <- ggplot(data, aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = category)) +
geom_rect() +
coord_polar(theta = "y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "bottom") +
labs(title = "Circle Donut Chart")
# 添加黑色边框到最大比例的细胞类型
p + geom_rect(data = data[data$category == max_category, ],
aes(xmax = 4.1, xmin = 2.9, ymax = ymax, ymin = ymin),
color = "black", fill = NA)
p
max_category
ggplot(data, aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = category)) +
geom_rect() +
coord_polar(theta = "y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "bottom") +
labs(title = "Circle Donut Chart")
mean_df
ggplot(data, aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = category)) +
geom_rect() +
coord_polar(theta = "y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "bottom") +
labs(title = rownames(mean_df)[i])+
scale_fill_manual(values = c("#F8766D", "#00BA38", "#619CFF", "#F564E3", "#00BFC4", "#F9BF3B"))
getwd()
save.image("D:\\OneDrive\\类器官空间\\DEanalysis\\.RData")
devtools::load_all(".")
library(scPagwas)
system.time(
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
)
##------ Tue Aug  8 16:54:10 2023 ------##
##------ Tue Aug  8 16:54:14 2023 ------##
##------ Tue Aug  8 16:54:44 2023 ------##
##------ Tue Aug  8 16:54:44 2023 ------##
##------ Tue Aug  8 16:54:45 2023 ------##
##------ Tue Aug  8 16:54:45 2023 ------##
##------ Tue Aug  8 16:55:04 2023 ------##
##------ Tue Aug  8 16:55:05 2023 ------##
##------ Tue Aug  8 16:55:08 2023 ------##
devtools::document()
pkgdown::build_site()
devtools::document()
devtools::document()
library(scPagwas)
Pathway_pcascore_run
Pathway_pcascore_run
devtools::load_all(".")
library(scPagwas)
system.time(
#1.start to run the wrapper functions for example.
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
)
##------ Wed Aug  9 09:51:40 2023 ------##
##------ Wed Aug  9 09:51:44 2023 ------##
##------ Wed Aug  9 09:52:12 2023 ------##
##------ Wed Aug  9 09:52:12 2023 ------##
##------ Wed Aug  9 09:52:13 2023 ------##
##------ Wed Aug  9 09:52:13 2023 ------##
##------ Wed Aug  9 09:52:31 2023 ------##
##------ Wed Aug  9 09:52:33 2023 ------##
##------ Wed Aug  9 09:52:35 2023 ------##
devtools::document()
library(scPagwas)
devtools::load_all(".")
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
##------ Sat Aug 19 14:58:45 2023 ------##
##------ Sat Aug 19 14:58:50 2023 ------##
##------ Sat Aug 19 14:59:21 2023 ------##
##------ Sat Aug 19 14:59:21 2023 ------##
##------ Sat Aug 19 14:59:21 2023 ------##
##------ Sat Aug 19 14:59:22 2023 ------##
##------ Sat Aug 19 14:59:40 2023 ------##
##------ Sat Aug 19 14:59:41 2023 ------##
##------ Sat Aug 19 14:59:44 2023 ------##
devtools::load_all(".")
devtools::load_all(".")
Pagwas_data<-scPagwas_main(Pagwas = NULL,
gwas_data =system.file("extdata", "GWAS_summ_example.txt", package = "scPagwas"), # The GWAS Summary statistics files
Single_data =system.file("extdata", "scRNAexample.rds", package = "scPagwas"),# scRNA-seq data in seruat format with "RNA" assays and normalized.
output.prefix="test", # the prefix name for output files
output.dirs="scPagwastest_output",# the directory file's name for output
block_annotation = block_annotation,# gene position in chromosome is provided by package.
assay="RNA", # the assays for scRNA-seq data to use.
Pathway_list=Genes_by_pathway_kegg,# pathway list is provided by package, including gene symbols.
n.cores=1,
iters_singlecell = 10,
chrom_ld = chrom_ld,# The LD data is provided by package.
singlecell=T, # Whether to run the singlecell process.
celltype=T# Whether to run the celltype process.
)
##------ Sat Aug 19 15:02:06 2023 ------##
##------ Sat Aug 19 15:02:10 2023 ------##
##------ Sat Aug 19 15:02:24 2023 ------##
##------ Sat Aug 19 15:02:24 2023 ------##
##------ Sat Aug 19 15:02:24 2023 ------##
##------ Sat Aug 19 15:02:25 2023 ------##
##------ Sat Aug 19 15:02:41 2023 ------##
##------ Sat Aug 19 15:02:41 2023 ------##
##------ Sat Aug 19 15:02:43 2023 ------##
devtools::load_all(".")
scPagwas_Visualization(Single_data=Pagwas_data,
p_thre = 0.05,
FigureType = "tsne",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
scPagwas_Visualization(Single_data=Pagwas_data,
p_thre = 0.05,
FigureType = "umap",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
devtools::load_all(".")
scPagwas_Visualization(Single_data=Pagwas_data,
p_thre = 0.05,
FigureType = "umap",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
devtools::load_all(".")
scPagwas_Visualization(Single_data=Pagwas_data,
p_thre = 0.05,
FigureType = "umap",
width = 7,
height = 7,
lowColor = "white",
highColor = "red",
output.dirs="figure",
size = 0.5,
do_plot = T)
devtools::document()
library(scPagwas)
usethis::use_pkgdown()
pkgdown::build_site()
